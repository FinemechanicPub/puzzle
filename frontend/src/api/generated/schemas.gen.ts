// This file is auto-generated by @hey-api/openapi-ts

export const $CreateGameRequest = {
    properties: {
        title: {
            type: 'string',
            title: 'Title',
            default: ''
        },
        width: {
            type: 'integer',
            maximum: 60,
            minimum: 1,
            title: 'Width'
        },
        height: {
            type: 'integer',
            maximum: 60,
            minimum: 1,
            title: 'Height'
        },
        pieces: {
            items: {
                '$ref': '#/components/schemas/PieceColor'
            },
            type: 'array',
            title: 'Pieces'
        }
    },
    type: 'object',
    required: ['width', 'height', 'pieces'],
    title: 'CreateGameRequest'
} as const;

export const $Difficulty = {
    type: 'integer',
    enum: [5, 8, 12],
    title: 'Difficulty'
} as const;

export const $ErrorModel = {
    properties: {
        detail: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    additionalProperties: {
                        type: 'string'
                    },
                    type: 'object'
                }
            ],
            title: 'Detail'
        }
    },
    type: 'object',
    required: ['detail'],
    title: 'ErrorModel'
} as const;

export const $GameLongResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        width: {
            type: 'integer',
            title: 'Width'
        },
        height: {
            type: 'integer',
            title: 'Height'
        },
        pieces: {
            items: {
                '$ref': '#/components/schemas/GamePieceRotationsResponse'
            },
            type: 'array',
            title: 'Pieces'
        }
    },
    type: 'object',
    required: ['id', 'title', 'width', 'height', 'pieces'],
    title: 'GameLongResponse'
} as const;

export const $GamePieceRotationsResponse = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        name: {
            type: 'string',
            title: 'Name'
        },
        color: {
            type: 'integer',
            title: 'Color'
        },
        count: {
            type: 'integer',
            title: 'Count'
        },
        rotations: {
            items: {
                '$ref': '#/components/schemas/Rotation'
            },
            type: 'array',
            title: 'Rotations'
        }
    },
    type: 'object',
    required: ['id', 'name', 'color', 'count', 'rotations'],
    title: 'GamePieceRotationsResponse'
} as const;

export const $GameResponseBase = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        title: {
            type: 'string',
            title: 'Title'
        },
        width: {
            type: 'integer',
            title: 'Width'
        },
        height: {
            type: 'integer',
            title: 'Height'
        }
    },
    type: 'object',
    required: ['id', 'title', 'width', 'height'],
    title: 'GameResponseBase'
} as const;

export const $GameStatus = {
    type: 'integer',
    enum: [1, 2, 3],
    title: 'GameStatus'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $HintRequest = {
    properties: {
        game_id: {
            type: 'integer',
            minimum: 0,
            title: 'Game Id'
        },
        pieces: {
            items: {
                '$ref': '#/components/schemas/PiecePlacement'
            },
            type: 'array',
            title: 'Pieces'
        }
    },
    type: 'object',
    required: ['game_id', 'pieces'],
    title: 'HintRequest'
} as const;

export const $HintResponse = {
    properties: {
        status: {
            '$ref': '#/components/schemas/GameStatus'
        },
        hint: {
            anyOf: [
                {
                    '$ref': '#/components/schemas/PiecePlacement'
                },
                {
                    type: 'null'
                }
            ]
        }
    },
    type: 'object',
    required: ['status', 'hint'],
    title: 'HintResponse'
} as const;

export const $LoginRequest = {
    properties: {
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        password: {
            type: 'string',
            title: 'Password'
        }
    },
    type: 'object',
    required: ['email', 'password'],
    title: 'LoginRequest'
} as const;

export const $PieceBase = {
    properties: {
        name: {
            type: 'string',
            maxLength: 1,
            title: 'Name'
        },
        points: {
            items: {
                prefixItems: [
                    {
                        type: 'integer'
                    },
                    {
                        type: 'integer'
                    }
                ],
                type: 'array',
                maxItems: 2,
                minItems: 2
            },
            type: 'array',
            title: 'Points'
        },
        color: {
            type: 'integer',
            title: 'Color'
        }
    },
    type: 'object',
    required: ['name', 'points', 'color'],
    title: 'PieceBase'
} as const;

export const $PieceColor = {
    properties: {
        piece_id: {
            type: 'integer',
            title: 'Piece Id'
        },
        color: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'string'
                }
            ],
            title: 'Color'
        }
    },
    type: 'object',
    required: ['piece_id', 'color'],
    title: 'PieceColor'
} as const;

export const $PieceGetResponse = {
    properties: {
        name: {
            type: 'string',
            maxLength: 1,
            title: 'Name'
        },
        points: {
            items: {
                prefixItems: [
                    {
                        type: 'integer'
                    },
                    {
                        type: 'integer'
                    }
                ],
                type: 'array',
                maxItems: 2,
                minItems: 2
            },
            type: 'array',
            title: 'Points'
        },
        color: {
            type: 'integer',
            title: 'Color'
        },
        id: {
            type: 'integer',
            title: 'Id'
        },
        size: {
            type: 'integer',
            title: 'Size',
            readOnly: true
        }
    },
    type: 'object',
    required: ['name', 'points', 'color', 'id', 'size'],
    title: 'PieceGetResponse'
} as const;

export const $PiecePlacement = {
    properties: {
        piece_id: {
            type: 'integer',
            minimum: 0,
            title: 'Piece Id'
        },
        rotation_id: {
            type: 'integer',
            minimum: 0,
            title: 'Rotation Id'
        },
        position: {
            type: 'integer',
            maximum: 120,
            minimum: 0,
            title: 'Position'
        }
    },
    type: 'object',
    required: ['piece_id', 'rotation_id', 'position'],
    title: 'PiecePlacement'
} as const;

export const $Rotation = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        points: {
            items: {
                prefixItems: [
                    {
                        type: 'integer'
                    },
                    {
                        type: 'integer'
                    }
                ],
                type: 'array',
                maxItems: 2,
                minItems: 2
            },
            type: 'array',
            title: 'Points'
        },
        flipped: {
            type: 'integer',
            title: 'Flipped'
        }
    },
    type: 'object',
    required: ['id', 'points', 'flipped'],
    title: 'Rotation'
} as const;

export const $UserRead = {
    properties: {
        id: {
            type: 'integer',
            title: 'Id'
        },
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        is_active: {
            type: 'boolean',
            title: 'Is Active',
            default: true
        },
        is_superuser: {
            type: 'boolean',
            title: 'Is Superuser',
            default: false
        },
        is_verified: {
            type: 'boolean',
            title: 'Is Verified',
            default: false
        }
    },
    type: 'object',
    required: ['id', 'email'],
    title: 'UserRead'
} as const;

export const $UserUpdate = {
    properties: {
        password: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Password'
        },
        email: {
            anyOf: [
                {
                    type: 'string',
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        },
        is_active: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Active'
        },
        is_superuser: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Superuser'
        },
        is_verified: {
            anyOf: [
                {
                    type: 'boolean'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Is Verified'
        }
    },
    type: 'object',
    title: 'UserUpdate'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;